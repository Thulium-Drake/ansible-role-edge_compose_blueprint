---
- name: 'Ensure dependencies'
  ansible.builtin.package:
    name:
      - 'dnf-utils'
      - 'git'
      - 'rpm-build'
    state: 'present'

- name: 'Get distro-id'
  ansible.builtin.set_fact:
    edge_compose_blueprint_distro: "{{ edge_compose_blueprint_distros[ansible_facts['distribution']] }}-{{ ansible_facts['distribution_major_version'] }}"

- name: 'Compose blueprint files from source'
  when:
    - edge_compose_blueprint | bool
  block:
    - name: 'Wipe git checkout'
      ansible.builtin.file:
        path: "{{ edge_compose_blueprint_checkout }}"
        state: 'absent'
      when: edge_compose_blueprint_clear_git

    - name: 'Ensure git checkout up to date'
      ansible.builtin.git:
        accept_newhostkey: true
        repo: "{{ edge_compose_blueprint_git_repo }}"
        dest: "{{ edge_compose_blueprint_checkout }}"
        version: "{{ edge_compose_blueprint_git_version }}"
        key_file: "{{ edge_compose_blueprint_git_sshkey | default(omit, true) }}"
        force: true
        track_submodules: false
        update: true
      register: 'git_repo_information'
      run_once: true
      become: false
      delegate_to: 'localhost'  # Save on Controller to be able to render templates
      when: edge_compose_blueprint_update_git | bool

    - name: 'Render blueprints and kickstart files'
      ansible.builtin.include_tasks: 'tasks/compose_blueprint.yml'
      loop: "{{ edge_compose_blueprint_images }}"
      loop_control:
        loop_var: 'blueprint'
      when:
        - blueprint['build_enabled'] | default(true) | bool
        - blueprint['distro'] == edge_compose_blueprint_distro

- name: 'Build images with osbuild-composer'
  when:
    - edge_compose_blueprint_build | bool
    - image['build_enabled'] | default(true) | bool
    - image['distro'] == edge_compose_blueprint_distro
  ansible.builtin.include_tasks: 'tasks/make_blueprint.yml'
  loop: "{{ edge_compose_blueprint_images }}"
  loop_control:
    loop_var: 'image'

- name: 'Update PXEboot menu'
  ansible.builtin.template:
    src: "{{ pxeboot['name'] }}"
    dest: "/var/lib/tftpboot/{{ pxeboot['dest'] }}"
    owner: 'root'
    group: 'root'
    mode: '0644'
  loop:
    - name: 'pxelinux.cfg.j2'
      dest: 'pxelinux.cfg/default'
    - name: 'grub.cfg.j2'
      dest: 'grub.cfg'
  loop_control:
    loop_var: 'pxeboot'

- name: 'Ensure iPXE menus'
  when: edge_compose_blueprint_ipxe_menus
  block:
    - name: 'Ensure directory for iPXE menus'
      ansible.builtin.file:
        path: '/var/www/html/ipxe'
        state: 'directory'
        group: 'root'
        mode: '0755'

    - name: 'Update iPXE menus'
      ansible.builtin.template:
        src: 'image.ipxe.j2'
        dest: "/var/www/html/ipxe/{{ blueprint['name'] }}.ipxe"
        owner: 'root'
        group: 'root'
        mode: '0644'
      loop: "{{ edge_compose_blueprint_images }}"
      loop_control:
        loop_var: 'blueprint'
      when:
        - blueprint['build_enabled'] | default(true) | bool
        - blueprint['distro'] == edge_compose_blueprint_distro

- name: 'Clean up old config RPMs'
  ansible.builtin.command: find /var/www/html/config-rpms -name "*.rpm" -mtime +3 -delete
  changed_when: true
